package Object;import Interface.GameScreen;import Map.Manager;import sound.GameSound;import javax.imageio.ImageIO;import javax.swing.text.DefaultCaret;import java.awt.*;import java.awt.image.BufferedImage;import java.io.File;import java.io.IOException;public class Bom  {    /**     * class đối tượng bom     */    private int posXBom;    private int posYBom;    private float time;    private boolean setBom;    private boolean ignite;                 // thuộc tính nổ hay chưa    private Manager manager;    private BomFlash bomflash;    private BufferedImage image;    private int item;    public Bom(Manager manager, int x, int y){        posYBom = y;        posYBom = x;        this.manager = manager;        setBom = false;        ignite = false;        try {            image = ImageIO.read(new File("image/bomb.gif"));        } catch (IOException e) {            e.printStackTrace();        }        item = 0;    }    public void flashbom(){        GameSound.getIstance().getAudio(GameSound.BOMB).play();        bomflash = new BomFlash(this.getPosXBom(),this.getPosYBom(),manager,manager.buff.getSizeBom());    }    public void draw(Graphics2D g2){            //manager.drawAllItem(g2);            //manager.drawAllBox(g2);            if (setBom == true) {                g2.drawImage(image, this.getPosXBom(), this.getPosYBom(), null);            }            if (ignite==true) {                bomflash.draw(g2);                bomflash.update(this.getPosXBom(), this.getPosYBom(), manager);            }    }    public void update(long now, BomberMan bomberMan){        if(isSetBom()) {            if (now / 1000000000 - getTime() / 1000000000 > 2) {                setSetBom(false);                setIgnite(true);            }        }        if(now/1000000000  - getTime()/1000000000  > 3){            setIgnite(false);        }        if(isIgnite()) {            if(bomflash.impaction( bomberMan)) bomberMan.setDied(true);        }    }    public boolean impactionBomberBox(BomberMan bomberMan){        Rectangle rectangleBomber = new Rectangle(bomberMan.getPosX(),bomberMan.getPosY(),bomberMan.getWidth(),bomberMan.getHeight());        Rectangle rectangle = new Rectangle();        for(int i=0; i<manager.getArrBox().size(); i++){            Rectangle rectangleBox = new Rectangle(manager.getArrBox().get(i).getX(), manager.getArrBox().get(i).getY(), 45,45);            if(rectangleBomber.intersects(rectangleBox)){                rectangleBox.intersect(rectangleBox,rectangleBomber,rectangle);                if(rectangle.getHeight() > 25) return true;                else return false;            }        }        return false;    }    /**     * các hàm get set     * @return     */    public boolean isIgnite() {        return ignite;    }    public void setIgnite(boolean ignite) {        this.ignite = ignite;    }    public BufferedImage getImage() {        return image;    }    public void setImage(BufferedImage image) {        this.image = image;    }    public boolean isSetBom() {        return setBom;    }    public void setSetBom(boolean setBom) {        this.setBom = setBom;    }    public int getPosXBom() {        return posXBom;    }    public void setPosXBom(int posXBom) {        this.posXBom = posXBom;    }    public int getPosYBom() {        return posYBom;    }    public void setPosYBom(int posYBom) {        this.posYBom = posYBom;    }    public float getTime() {        return time;    }    public void setTime(float time) {        this.time = time;    }}